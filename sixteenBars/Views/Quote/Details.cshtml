@model sixteenBars.Models.QuoteViewModel
@using sixteenBars.Library;

<h1>Quote Details</h1>
@if (Model.Id > 0)
{
    <h2>
        "@Html.Raw(Model.Text)" -
        @Html.ActionLink(Model.ArtistName, URLClean.Clean(Model.ArtistName), "Artists")
    </h2>



    <div class="row" style="margin-bottom:15px;">
        <div class="col-md-12">
            <div class="fb-share-button"
                 data-href=""
                 data-layout="button_count">
            </div>
        </div>
    </div>

    if (!String.IsNullOrEmpty(Model.Explanation))
    {
        <p>
            <strong>
                Meaning
            </strong>
            <br />
            @Html.DisplayFor(model => model.Explanation)
        </p>
    }
    <div id="trackApp">
        <div ng-controller="AlbumController">

            <div class="row lower-details">
                <div class="col-md-3 albumArt">
                    <div class="ng-cloak notAvailable" ng-cloak ng-show="amzNoProductFound">
                        Album Art Not Found
                    </div>
                    <img class="ng-cloak" ng-cloak ng-show="amzProductFound" src="{{amzAlbumArt}}" />
                </div>

                <div class="col-md-9">
                    <p>
                        <strong>
                            Album :
                        </strong>


                        @Html.ActionLink(Model.AlbumName, "details", "album", new { id = Model.AlbumId }, null)
                    </p>
                
                    <p>
                        <strong>
                            Artist :
                        </strong>


                        @Html.ActionLink(Model.ArtistName, URLClean.Clean(Model.ArtistName), "Artists")
                    </p>
                
                    <p>
                        <strong>
                            Track :
                        </strong>

                        @Html.ActionLink(Model.TrackName, "details", "track", new { id = Model.TrackId }, null)
                    </p>
                
                    <div class="ng-cloak" ng-cloak ng-show="amzProductFound">
                        <hr />
                        <h4>Get This Track</h4>
                        <div ng-repeat="product in amzProducts">
                            <p>
                                <a href="{{product.URL}}" target="_blank">{{product.Title}}<br /><img src="~/Images/buy2._V192207737_.gif" alt="buy from amazon.com" /></a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>


            @Html.TextBoxFor(model => model.TrackName, new { ng_model = "amzTitle", ng_init = string.Format("amzTitle = '{0}'", Url.Encode(Model.TrackName) + " " + Url.Encode(Model.AlbumName)), style = "display:none;" })
            @Html.TextBoxFor(model => model.AlbumArtistName, new { ng_model = "amzArtistName", ng_init = string.Format("amzArtistName = '{0}'", Url.Encode(Model.AlbumArtistName)), style = "display:none;" })
            <input type="hidden" ng-model="amzType" ng-init="amzType='track'" />
        </div>
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index", "Quote", new { @class = "btn btn-back" })
        @if (User.IsInRole("admin") || User.IsInRole("editor"))
        {
            @: &nbsp;
            @Html.ActionLink("Edit", "Edit", "Quote", new { id = Model.Id }, new { @class = "btn btn-edit" })
            if (User.IsInRole("admin"))
            {
            @: &nbsp;
            @Html.ActionLink("Delete", "Delete", "Quote", new { id = Model.Id }, new { @class = "btn btn-remove" })
            }
        }
    </div>

}
else
{
    <p>No Quote Found.</p>
}

@section Scripts {
    <script src="~/Scripts/sixteenbars-track-app.js"></script>
    <script src="~/Scripts/sixteenbars-autocomplete-functions.js"></script>
    <script src="~/Scripts/sixteenbars-exist-functions.js"></script>
    <script src="~/Scripts/sixteenbars-album-autocomplete.js"></script>
    <script>
        $("body").on("click", ".word", function (e) {
            var txt = "";
            var attr = $(e.target).attr("class");
            if (attr != undefined) {
                txt = attr.replace(" word", "");
            }
            window.location.href = siteURL + "?word=" + txt;
        });

        $(".fb-share-button").attr("data-href", window.location.href);

        window.fbAsyncInit = function () {
            FB.init({
                appId: '1474377432864288',
                xfbml: true,
                version: 'v2.4'
            });
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));





    </script>
}
