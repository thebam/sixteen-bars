@model PagedList.IPagedList<sixteenBars.Library.Quote>
@using PagedList.Mvc;
@using sixteenBars.Library;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<h1>Quotes</h1>
@if (Model != null) {
    if (User.IsInRole("admin") || User.IsInRole("editor")) { 
<p>
    @Html.ActionLink("Add Quote", "Create","Quote", null,new { @class = "btn btn-add" })
</p>
}
<div class="index-list">
    @foreach (var item in Model)
    {
    <div class="row">
        <div class="col-md-6">
            @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
            {
                if (item.Enabled == false)
                {
                    <div class="glyphicon glyphicon-ban-circle disabledItem"></div>
                }
            }
            <span class="quote">@Html.ActionLink(item.Text, URLClean.Clean(item.Artist.Name) + "/" + URLClean.Clean(item.Text), "Quotes")</span> 
        </div>
        <div class="col-md-2">
            Artist : 
            @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
            {
                if (item.Artist.Enabled == false)
                {
                    <div class="glyphicon glyphicon-ban-circle disabledItem"></div>
                }
            }
            @Html.ActionLink(item.Artist.Name, URLClean.Clean(item.Artist.Name), "Artists")
        </div>
        <div class="col-md-2">
            Track : 
            @if (User.IsInRole("Admin") || User.IsInRole("Editor"))
            {
                if (item.Track.Enabled == false || item.Track.Album.Enabled == false || item.Track.Album.Artist.Enabled == false)
                {
                    <div class="glyphicon glyphicon-ban-circle disabledItem"></div>
                }
            }
            @Html.ActionLink(item.Track.Title, URLClean.Clean(item.Track.Album.Title) + "/" + URLClean.Clean(item.Track.Title), "Tracks")
        </div>
        <div class="col-md-2">
            @if (User.IsInRole("admin") || User.IsInRole("editor"))
            {
                @Html.ActionLink("Edit", "Edit", new { id = item.QuoteId })
                if (User.IsInRole("admin"))
                {
                    @: &nbsp;
                    @Html.ActionLink("Delete", "Delete", new { id = item.QuoteId })
            }}
        </div>
    </div>  
    }
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    <div class="clearfix"></div>
    </div>
    }
    else
    {
    <p>No Quotes Found.</p>
    }


