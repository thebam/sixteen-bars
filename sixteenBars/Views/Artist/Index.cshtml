@model PagedList.IPagedList<sixteenBars.Models.ArtistIndexViewModel>
@using PagedList.Mvc;
@using sixteenBars.Library;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<h2>Artists</h2>

<div class="row lower-details">
    @{ int randomArtistsCnt = 0;
        foreach (Artist artist in ViewBag.RandomArtists)
        {
            randomArtistsCnt++;
            if (randomArtistsCnt > 1)
            {
                <div class="col-md-3 hidden-sm hidden-xs">
                    <img src="@artist.Image" class="img-responsive" />
                    <strong>@Html.ActionLink(artist.Name, URLClean.Clean(artist.Name), "Artists")</strong>
                </div>
            }
            else
            {
                <div class="col-md-3">
                    <img src="@artist.Image" class="img-responsive" />
                    <strong>@Html.ActionLink(artist.Name, URLClean.Clean(artist.Name), "Artists")</strong>
                </div>
            }
        }
    }
</div>
<div class="clearfix"></div>

@if (User.IsInRole("admin") || User.IsInRole("editor"))
{
    <p>
        @Html.ActionLink("Add Artist", "Create","Artist",null, new { @class = "btn btn-add" })
    </p>
}
@if (Model != null)
{

    <div class="index-list">
        @foreach (var item in Model)
        {
            <div class="row">
                <div class="col-md-10">
                    @if (User.IsInRole("Admin") || User.IsInRole("Editor")) {
                        if (item.Enabled == false) {
                            <div class="glyphicon glyphicon-ban-circle disabledItem"></div>
                        }
                    }
                    @Html.ActionLink(item.Name, URLClean.Clean(item.Name), "Artists")
                </div>
                <div class="col-md-2">
                    @if (User.IsInRole("admin") || User.IsInRole("editor"))
                    {
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id })
                        if (item.IsDeleteable && User.IsInRole("admin"))
                        {
                            @:&nbsp; @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        }
                    }
                </div>

            </div>
        }
        <br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        <div class="clearfix"></div>
            </div>
}
        else
        {
        <p>No Artists Found</p>
        }
