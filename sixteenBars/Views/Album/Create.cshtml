@model sixteenBars.Library.Album
@Styles.Render("~/Content/themes/base/css")


<h1>Add New Album</h1>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <h2>@ViewBag.ErrorMessage</h2>

    <div class="form">



        <div class="form-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="form-element">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="form-label">
            @Html.LabelFor(model => model.Artist.Name)
        </div>
        <div class="form-element">
            @Html.EditorFor(model => model.Artist.Name)
            @Html.ValidationMessageFor(model => model.Artist.Name)
        </div>

        <div class="form-label">
            @Html.LabelFor(model => model.ReleaseDate)
        </div>
        <div class="form-element">
            @Html.EditorFor(model => model.ReleaseDate)
            @Html.ValidationMessageFor(model => model.ReleaseDate)
        </div>

        <p style="margin-top:15px;">
            <input type="submit" value="Add Album" class="btn-inverse" />
        </p>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", "Album", new { @class = "btn btn-back" })
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryui")
            @Scripts.Render("~/bundles/jqueryval")
            <script>
                $(document).ready(function () {
                    var minimumDate = new Date(1978, 1 - 1, 1);
                    var today = new Date();
                    var maximumDate = new Date(today.getFullYear(), today.getMonth(), today.getDate());
                    $("#ReleaseDate").datepicker({ minDate: minimumDate, maxDate: maximumDate });
                });
            </script>
        }
